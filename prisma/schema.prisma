generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  firstName    String         @db.VarChar(255)
  lastName     String         @db.VarChar(255)
  email        String         @unique
  password     String
  Posts        Post[]
  Comments     Comment[]
  Profile      Profile        @relation(fields: [profileId], references: [id])
  profileId    Int            @unique
  LikesPosts   LikePosts[]
  LikeComments LikeComments[]
}

model Profile {
  id            Int     @id @default(autoincrement())
  profileImgUrl String?
  cloudId       String?
  User          User?
}

model Post {
  id         String      @id @default(uuid())
  User       User        @relation(fields: [userId], references: [id])
  userId     Int
  Comments   Comment[]
  title      String      @db.VarChar(255)
  content    String
  published  Boolean     @default(true)
  likes      Int         @default(0)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  imgUrl     String?
  cloudId    String?
  LikesPosts LikePosts[]
  Topics     Topic[]
}

model Comment {
  id           String         @id @default(uuid())
  User         User           @relation(fields: [userId], references: [id])
  userId       Int
  Post         Post           @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId       String
  content      String
  likes        Int            @default(0)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  LikeComments LikeComments[]
}

model Topic {
  id    Int    @id @default(autoincrement())
  name  String @unique @db.VarChar(100)
  Posts Post[]
}

model LikePosts {
  id     Int    @id @default(autoincrement())
  user   User   @relation(fields: [userId], references: [id])
  userId Int
  post   Post   @relation(fields: [postId], references: [id])
  postId String

  @@unique([userId, postId])
}

model LikeComments {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  comment   Comment @relation(fields: [commentId], references: [id])
  commentId String

  @@unique([userId, commentId])
}
